apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-persistence
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-persistence
  template:
    metadata:
      labels:
        app: postgres-persistence
    spec:
      initContainers:
        - name: load-dump
          image: minio/mc
          imagePullPolicy: Always
          command: ["mc"]
          args: ["cp", "toto/nrandriamanana/script_sql_bdd.sql", "/data/"]
          env:
           - name: MC_HOST_toto
             valueFrom:
              secretKeyRef:
                name: secret-cred-mc
                key: MC_HOST_toto
                optional: false # same as default; "mysecret" must exist
                                  # and include a key named "username 
          volumeMounts:
            - mountPath: /data
              name: dump
      containers:
      - name: postgres-persistence
        image: postgres:14.4
        envFrom: 
        - configMapRef:
            name: configmap-postgres
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-api
              key: POSTGRES_PASSWORD
              optional: false # same as default; "mysecret" must exist
                                      # and include a key named "username 
        volumeMounts:
          - name: postgres-persistence-volume
            mountPath: /var/lib/postgresql/data
            subPath: portal #trick un peu arnaque pour Ã©viter le dossier lost+found
          - name: dump
            mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-persistence-volume
        persistentVolumeClaim:
          claimName: pvc
      - name: dump
        emptyDir: {}

      
  

